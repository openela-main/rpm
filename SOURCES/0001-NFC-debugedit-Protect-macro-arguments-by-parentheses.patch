From a93b0f5c9f0abef6efb5413df9e98b047a2a9a46 Mon Sep 17 00:00:00 2001
From: Jan Kratochvil <jan.kratochvil@redhat.com>
Date: Mon, 17 Aug 2020 16:56:56 +0200
Subject: [PATCH 1/6] [NFC] debugedit: Protect macro arguments by parentheses

---
 tools/debugedit.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/tools/debugedit.c b/tools/debugedit.c
index 6bea88551..a351adec8 100644
--- a/tools/debugedit.c
+++ b/tools/debugedit.c
@@ -233,7 +233,7 @@ typedef struct
   int shift = 0;			\
   do					\
     {					\
-      c = *ptr++;			\
+      c = *(ptr)++;			\
       ret |= (c & 0x7f) << shift;	\
       shift += 7;			\
     } while (c & 0x80);			\
@@ -251,7 +251,7 @@ typedef struct
       valv >>= 7;			\
       if (valv)				\
 	c |= 0x80;			\
-      *ptr++ = c;			\
+      *(ptr)++ = c;			\
     }					\
   while (valv);				\
 })
@@ -311,7 +311,7 @@ strptr (DSO *dso, int sec, off_t offset)
 }
 
 
-#define read_8(ptr) *ptr++
+#define read_8(ptr) *(ptr)++
 
 #define read_16(ptr) ({					\
   uint16_t ret = do_read_16 (ptr);			\
@@ -328,13 +328,13 @@ strptr (DSO *dso, int sec, off_t offset)
 REL *relptr, *relend;
 int reltype;
 
-#define do_read_32_relocated(ptr) ({			\
-  uint32_t dret = do_read_32 (ptr);			\
+#define do_read_32_relocated(xptr) ({			\
+  uint32_t dret = do_read_32 (xptr);			\
   if (relptr)						\
     {							\
-      while (relptr < relend && relptr->ptr < ptr)	\
+      while (relptr < relend && relptr->ptr < (xptr))	\
 	++relptr;					\
-      if (relptr < relend && relptr->ptr == ptr)	\
+      if (relptr < relend && relptr->ptr == (xptr))	\
 	{						\
 	  if (reltype == SHT_REL)			\
 	    dret += relptr->addend;			\
-- 
2.18.4

